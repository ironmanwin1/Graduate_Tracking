import flet as ft
import httpx

class ProfileView(ft.View):
    def __init__(self, page: ft.Page):
        # ‡∏ï‡∏±‡πâ‡∏á route ‡πÄ‡∏õ‡πá‡∏ô "/profile" ‡πÄ‡∏´‡∏°‡∏∑‡∏≠‡∏ô‡πÄ‡∏î‡∏¥‡∏°
        super().__init__("/profile")
        self.page = page

        # ‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡πÉ‡∏ä‡πâ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•
        student = self.get_logged_in_student()

        # ‡∏õ‡∏∏‡πà‡∏°‡∏Å‡∏•‡∏±‡∏ö‡∏´‡∏ô‡πâ‡∏≤ Home
        back_button = ft.IconButton(
            icon=ft.icons.ARROW_BACK,
            tooltip="‡∏Å‡∏•‡∏±‡∏ö‡πÑ‡∏õ‡∏´‡∏ô‡πâ‡∏≤ Home",
            on_click=lambda e: page.go("/home")
        )

        header = ft.Row(
            controls=[
                back_button,
                ft.Text("‡∏´‡∏ô‡πâ‡∏≤‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡πà‡∏ß‡∏ô‡∏ï‡∏±‡∏ß (ProfileView)", size=24, weight="bold")
            ],
            vertical_alignment=ft.CrossAxisAlignment.CENTER,
            spacing=10
        )

        if not student:
            # ‡∏ñ‡πâ‡∏≤‡πÑ‡∏°‡πà‡πÄ‡∏à‡∏≠‡∏ô‡∏±‡∏Å‡∏®‡∏∂‡∏Å‡∏©‡∏≤‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà‡∏°‡∏µ student_id
            self.controls = [
                header,
                ft.Divider(),
                ft.Text("‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏ô‡∏±‡∏Å‡∏®‡∏∂‡∏Å‡∏©‡∏≤", size=20, color="red")
            ]
        else:
            # ‡∏™‡∏£‡πâ‡∏≤‡∏á UI ‡∏à‡∏≤‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ô‡∏±‡∏Å‡∏®‡∏∂‡∏Å‡∏©‡∏≤
            left_column = ft.Column([
                ft.CircleAvatar(
                    foreground_image_src="https://cdn-icons-png.flaticon.com/512/3135/3135715.png",
                    radius=60
                ),
                ft.Text(f"{student.get('prefix', '')} {student.get('name', '')}", weight="bold"),
                ft.Text(f"‡∏£‡∏´‡∏±‡∏™‡∏ô‡∏±‡∏Å‡∏®‡∏∂‡∏Å‡∏©‡∏≤: {student.get('student_id', '')}"),
                ft.Text(f"‡πÄ‡∏ö‡∏≠‡∏£‡πå‡πÇ‡∏ó‡∏£‡∏®‡∏±‡∏û‡∏ó‡πå: {student.get('phone', '')}"),
                ft.Text(f"‡∏≠‡∏µ‡πÄ‡∏°‡∏•: {student.get('email', '')}"),
                ft.Text("‡∏•‡∏≤‡∏¢‡πÄ‡∏ã‡πá‡∏ô‡∏≠‡∏≠‡∏ô‡πÑ‡∏•‡∏ô‡πå:", weight="bold", top=10),
                ft.Image(src=student.get('signature_url', ''), width=200, height=60)
            ], spacing=10)

            right_column = ft.Column([
                ft.Text("‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡∏≤‡∏£‡∏®‡∏∂‡∏Å‡∏©‡∏≤", weight="bold", size=16),
                ft.Text(f"‡∏£‡∏∞‡∏î‡∏±‡∏ö‡∏õ‡∏£‡∏¥‡∏ç‡∏ç‡∏≤: {student.get('degree_level', '')}"),
                ft.Text(f"‡∏´‡∏•‡∏±‡∏Å‡∏™‡∏π‡∏ï‡∏£: {student.get('program', '')}"),
                ft.Text(f"‡πÅ‡∏ú‡∏ô‡∏Å‡∏≤‡∏£‡πÄ‡∏£‡∏µ‡∏¢‡∏ô: {student.get('study_plan', '')}"),
                ft.Divider(),
                ft.Text("‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ß‡∏¥‡∏ó‡∏¢‡∏≤‡∏ô‡∏¥‡∏û‡∏ô‡∏ò‡πå", weight="bold", size=16),
                ft.Text(f"‡∏ä‡∏∑‡πà‡∏≠‡πÄ‡∏£‡∏∑‡πà‡∏≠‡∏á: {student.get('thesis', {}).get('title', '')}"),
                ft.Text(f"‡∏≠‡∏≤‡∏à‡∏≤‡∏£‡∏¢‡πå‡∏ó‡∏µ‡πà‡∏õ‡∏£‡∏∂‡∏Å‡∏©‡∏≤‡∏´‡∏•‡∏±‡∏Å: {student.get('thesis', {}).get('advisor', '')}"),
                ft.Text(f"‡∏≠‡∏≤‡∏à‡∏≤‡∏£‡∏¢‡πå‡∏ó‡∏µ‡πà‡∏õ‡∏£‡∏∂‡∏Å‡∏©‡∏≤‡∏£‡πà‡∏ß‡∏°: {student.get('thesis', {}).get('co_advisor', '')}"),
                ft.Text(
                    f"‡∏™‡∏≠‡∏ö‡∏´‡∏±‡∏ß‡∏Ç‡πâ‡∏≠: {student.get('thesis', {}).get('proposal_exam', {}).get('status', '')}"
                    f" (‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà: {student.get('thesis', {}).get('proposal_exam', {}).get('date', '-')})"
                ),
                ft.Text(
                    f"‡∏™‡∏≠‡∏ö‡∏™‡∏∏‡∏î‡∏ó‡πâ‡∏≤‡∏¢: {student.get('thesis', {}).get('final_exam', {}).get('status', '')}"
                ),
                ft.Divider(),
                ft.Text("‡∏Ñ‡∏∞‡πÅ‡∏ô‡∏ô‡∏™‡∏≠‡∏ö‡∏†‡∏≤‡∏©‡∏≤‡∏≠‡∏±‡∏á‡∏Å‡∏§‡∏©", weight="bold", size=16),
                ft.Text(
                    f"{student.get('english_test', {}).get('type', '')}"
                    f" ‡∏Ñ‡∏∞‡πÅ‡∏ô‡∏ô {student.get('english_test', {}).get('score', '')}"
                )
            ], spacing=8)

            layout = ft.Row(
                controls=[
                    ft.Container(left_column, expand=1, padding=20),
                    ft.Container(right_column, expand=2, padding=20),
                ],
                spacing=20,
                scroll="AUTO"
            )

            self.controls = [
                header,
                ft.Divider(),
                layout
            ]

    def get_logged_in_student(self):
        # ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏≤‡∏Å FastAPI
        # ‡∏î‡∏∂‡∏á student_id ‡∏à‡∏≤‡∏Å client_storage
        student_id = self.page.client_storage.get("student_id")
        print("üì¶ student_id from storage:", student_id)

        if not student_id:
            return None

        try:
            res = httpx.get(f"http://127.0.0.1:8000/api/student/{student_id}")
            print("üì° API Status:", res.status_code)
            print("üì° API Response:", res.json())
            if res.status_code == 200 and "student_id" in res.json():
                return res.json()
        except Exception as e:
            print("‚ùå Error connecting to API:", e)

        return None
